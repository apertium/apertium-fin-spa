!!!!!!!!!!!!!!!
!! ATTRIBUTE CATEGORIES
!!!!!!!!!!!!!!!

number = (ND sg) sg pl sp ND;
gender = (GD m) m f mf GD;
case = (CC nom) nom gen par ine ela ill ade abl all tra ess com ;
det_type = def ind dem itg;
tensemood = pres past fut ifi pri fti;
numtype = (NT card) card ord NT ;
nptype = ant top cog al ;
comparison = (CO pst) pst cmp sup ;
person = p1 p2 p3 ;
voice = (VO actv) actv pasv ; 

!!!!!!!!!!!!!!!
!! OUTPUT PATTERNS
!!!!!!!!!!!!!!!

vblex: _.voice.tensemood.person.number;
vbmod: _.voice.tensemood.person.number;
vbser: _.voice.tensemood.person.number;
vbhaver: _.voice.tensemood.person.number;
np: _.nptype.gender.number.case;
n: _.number.case;
det: _.number.case;
adj: _.comparison.number.case;
num: _.numtype.number.case;
pr: _;
post: _;

! words
V: _;
NUM: _;
N: _;
A: _;
DET: _;

! phrases
NP: _.number;

!!!!!!!!!!!!!!!
!! TAG-REWRITE RULES
!!!!!!!!!!!!!!!

tensemood > tensemood : ifi past, fti fut;

!!!!!!!!!!!!!!!
!! MACROS
!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!
!! REDUCTION RULES
!!!!!!!!!!!!!!!

! Example rule:
! Input:  ^ראש<n><m><sg>/hovud<n><nt><sg>$ ^גדול<adj><m><sg>/stor<adj><nt><sg>$
! Output: ^stor<adj><nt><sg>$ ^hovud<n><nt><sg>$
! NP -> n.$number adj { 2[gender=1.gender, number=1.number] _ 1 } ;

NP -> det n { 2 } |
      1: de@pr n { 2[case=par] _  } |
      pr n { 2[case=gen] _ 1 } ;
A -> adj { 1 } ;
N -> n { 1 } |
     np { 1 } ;
NUM -> num { 1 } ;
V -> vblex { 1 } |
     vbmod { 1 } |
     vbser { 1 } |
     vbhaver { 1 } ;
DET -> det { 1 } ;
! Resources:
! https://wiki.apertium.org/wiki/Apertium-recursive
! https://wiki.apertium.org/wiki/Apertium-recursive/Formalism
! https://wiki.apertium.org/wiki/Apertium-recursive/Cookbook
